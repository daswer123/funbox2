import React from "react";
import { deleteWaypoint,changeTitle } from "../../actions";
import { connect } from "react-redux";
import { Draggable } from "react-beautiful-dnd";
import "./waypointItem.css";

const WaypointItem = ({title,id,index,deleteWaypoint, changeTitle}) => {

    const [editMode,setEditMode] = React.useState(false)
    const [newTitle,setnewTitle] = React.useState(title)

    const onDeleteWaypoint = (id) =>{
        deleteWaypoint(id)
    }

    const swithEditMode = () =>{
        setEditMode(!editMode)
    }

    const onChangeTitle = (e) => {
        setnewTitle(e.target.value)
    }


    const setNewTitle = (e) => {
        e.preventDefault();

        if (newTitle === ""){
            alert("Название точки должно содержать в себе хотя бы 1 символ")
            return
        }

        if (newTitle === title){
            swithEditMode()
            return
        }

        changeTitle(id, newTitle)
    }

    // Переключаем название на форму редактирования и наооборот
    const titleView = editMode ?
    <form onSubmit={(e) => setNewTitle(e)} className="change-title--form">
        <input 
        autoFocus 
        className="edit-input"
        onChange={(e) => onChangeTitle(e)}
        value={newTitle} type="text" 
        placeholder={title}/>
        <button type="submit" className="submit-btn"></button>
     </form>
     :
     <p>{title}</p>;

    // Подключаем библеотеку для Drag and Drop , оборачиваем наш элемент и добавляем нужные свойства
    return (
        <Draggable draggableId={`${id}`} index={index}>
            {(provided) => {
                return <li 
                ref={provided.innerRef}
                {...provided.dragHandleProps}
                {...provided.draggableProps}
                 className="waypoints--item">
                    {titleView}
                    <div className="waypoints-buttons">
                        <button onClick={() => swithEditMode()} type="button" className="edit-btn">
                        <svg width="15" height="15" viewBox="0 0 15 15" fill="black" xmlns="http://www.w3.org/2000/svg">
                            <path d="M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9338 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.6379 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825Z" fill="rgb(160, 160, 160)"/>
                        </svg>
                        </button>
                        <button type="button" className="delete-btn" onClick={() => onDeleteWaypoint(id)}>
                            <svg id="Capa_1" enableBackground="new 0 0 504.999 504.999" height="15" viewBox="0 0 504.999 504.999" width="15" xmlns="http://www.w3.org/2000/svg"><g><path d="m495.71 111.114-7.62-28.436c-4.009-14.96-17.625-25.408-33.114-25.408h-341.822c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h341.822c8.711 0 16.37 5.876 18.625 14.291l7.62 28.436c1.564 5.837.352 11.935-3.327 16.729s-9.254 7.544-15.297 7.544h-420.194c-6.043 0-11.619-2.75-15.297-7.544s-4.892-10.892-3.327-16.729l7.62-28.437c2.254-8.414 9.913-14.291 18.625-14.291h38.13c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-38.13c-15.488 0-29.105 10.448-33.113 25.408l-7.621 28.437c-2.781 10.378-.625 21.219 5.916 29.743s16.454 13.413 27.198 13.413h420.193c10.744 0 20.657-4.889 27.198-13.413s8.696-19.365 5.915-29.743z"/><path d="m439.581 345.361c-4.129-.371-7.772 2.67-8.144 6.796l-9.086 100.668c-1.914 21.193-19.402 37.174-40.681 37.174h-258.34c-21.278 0-38.767-15.981-40.68-37.174l-25.54-282.97c-.372-4.125-4.011-7.165-8.144-6.796-4.125.372-7.167 4.019-6.795 8.144l25.54 282.97c2.616 28.975 26.527 50.826 55.62 50.826h258.34c29.092 0 53.004-21.85 55.62-50.826l9.086-100.668c.372-4.125-2.671-7.772-6.796-8.144z"/><path d="m456.035 163.059c-4.127-.369-7.772 2.67-8.144 6.796l-13.598 150.655c-.372 4.125 2.67 7.771 6.795 8.144.229.021.457.031.683.031 3.837 0 7.109-2.93 7.461-6.826l13.598-150.655c.373-4.126-2.67-7.772-6.795-8.145z"/><path d="m161.5 53.123c4.142 0 7.5-3.358 7.5-7.5 0-16.886 13.737-30.623 30.623-30.623h105.754c16.885 0 30.623 13.737 30.623 30.623 0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5c0-25.157-20.467-45.623-45.623-45.623h-105.754c-25.157 0-45.623 20.466-45.623 45.623 0 4.142 3.357 7.5 7.5 7.5z"/><path d="m196.639 261.676c-21.528 21.528-28.784 53.96-18.484 82.624 1.1 3.06 3.983 4.966 7.059 4.966.842 0 1.698-.143 2.536-.444 3.898-1.401 5.923-5.696 4.522-9.594-8.345-23.226-2.467-49.503 14.975-66.946 21.743-21.743 55.364-24.533 80.164-8.384l-22.733 4.431c-4.066.792-6.719 4.731-5.927 8.796.698 3.581 3.836 6.067 7.353 6.067.476 0 .958-.046 1.443-.14l38.21-7.447c1.953-.381 3.674-1.521 4.785-3.171 1.112-1.65 1.522-3.673 1.142-5.626l-7.447-38.21c-.792-4.066-4.727-6.718-8.796-5.927-4.066.792-6.719 4.731-5.927 8.796l3.565 18.29c-30.341-18.158-70.329-14.192-96.44 11.919z"/><path d="m217.59 371.176 22.733-4.431c4.066-.792 6.719-4.731 5.927-8.796-.792-4.066-4.73-6.717-8.796-5.927l-38.21 7.447c-4.066.792-6.719 4.731-5.927 8.796l7.447 38.21c.698 3.581 3.836 6.067 7.353 6.067.476 0 .958-.046 1.443-.14 4.066-.792 6.719-4.731 5.927-8.796l-3.564-18.29c12.445 7.448 26.509 11.183 40.577 11.183 20.23 0 40.46-7.7 55.861-23.101 21.512-21.511 28.739-52.76 18.861-81.552-1.344-3.918-5.611-6.003-9.528-4.66-3.918 1.344-6.005 5.61-4.661 9.528 8.004 23.33 2.149 48.649-15.279 66.078-21.743 21.742-55.364 24.532-80.164 8.384z"/></g></svg>
                        </button>
                    </div>
                </li>
                }}
        </Draggable>
    )
}

const mapStateToProps = (state) =>{
    return{}
}

const mapDispathToProps = {
    deleteWaypoint,
    changeTitle
}

export default connect(mapStateToProps,mapDispathToProps)(WaypointItem)